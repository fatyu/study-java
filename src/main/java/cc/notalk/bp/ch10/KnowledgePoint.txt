高优先级线程的执行优先于低优先级线程



1. 通过继承Thread或者实现Runnable

	线程状态转换:
	start()-->就绪状态-->出现问题-->阻塞()-->问题解决 -->执行()-->end()
			  |
			  |
			  ^
			  执行()-->end()	 

2. sleep() yield() join()

	sleep(n)线程睡眠n个毫秒 

	join()将调用对象的线程与主线程合并-->相当于方法调用
	
	yield()将cpu的资源释放给其他线程 .注意:不要和setPriority()方法同时使用
	
3. Priority 
	setPriority()
		优先级从1-10
		MAX_PRIORITY = 10;
		MIN_PRIORTY = 1;
		NORMAL_PRIORITY = 5;
		
4. 线程同步:
	synchronized关键字使用
	线程死锁[由于synchronized对资源进行独占导致资源不能共享从而产生死锁问题]

	生产者消费者问题
